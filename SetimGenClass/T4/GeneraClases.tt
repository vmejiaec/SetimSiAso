<#@ template hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ include file="Plantillas\Schema.ttinclude"#>
<#
    // The namespace surrounding the code
    var namespaceName               = "SetimModelo";
    var connectionString            = @"Data Source=.;Initial Catalog=dnndev.me;Integrated Security=True";
    var schema                      = GetSchema (connectionString);
    Func<string, string> justify    = s => s.PadRight(20);  
    string Tabla_Nombre = "asoPeriodo";
    string SP_Prefijo= "sp_";

    var tables                      = schema
        .SchemaObjects
        .Where (so => ((so.Type == SchemaObject.SchemaObjectType.Table) 
            && (so.Name == Tabla_Nombre)))
        .ToArray ()
        ;
    var procs = schema
        .SchemaObjects
        .Where (so => ((so.Type == SchemaObject.SchemaObjectType.StoredProcedure )
            && (so.Name.StartsWith(SP_Prefijo+Tabla_Nombre))))
        .ToArray();
#>
namespace <#=namespaceName#>
{
<#
    foreach (var table in tables)
    {
#>
    /// <summary>
    /// Poco class para <#=table.Name#>
    /// </summary>
    partial class <#=table.Name#>
    {
<#
    foreach (var column in table.Columns)
    {
#>
    // Es PK? <#=column.IsIdentity #>
    public <#=justify (column.CsTypeName)#> <#=justify (column.Name)#>{ get; set; }
<#
    }
#>
    } 
<#
    }
#>
}

<#
    foreach(var proc in procs)
    {
        #>

//<#=proc.Name #>        
<#
        foreach (var param in proc.Parameters )
        {
            #>// --<#= param.Name #> : <#=param.CsTypeName #> es Output? <#=param.IsOutput #> 
<#
        }
    }
#>


<#+
    static Schema GetSchema (string connectionString) 
    {
        using (var connection = new SqlConnection (connectionString))
        {
            connection.Open ();

            return new Schema (connection);
        }
    }
#>