using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.ComponentModel;
using DotNetNuke.Common.Utilities;
using DotNetNuke.Data;
using DotNetNuke.Services.Log.EventLog;
using DotNetNuke.Services.Exceptions;

using SetimBasico;

namespace SetimBasico
{

    ///<summary>
    ///Controladores para los procedimientos de asoPeriodo
    ///</summary>

    [DataObjectAttribute()]
    public partial class asoPeriodoControl
    {
        LogEventos _eventos = new LogEventos();
        [DataObjectMethodAttribute(DataObjectMethodType.Select, true)]
        public IList<asoPeriodo> _0SelByasoServicio_Id(Int32 p_asoServicio_Id)
        {
            return CBO.FillCollection<asoPeriodo>(DataProvider.Instance().ExecuteReader(
                "sp_asoPeriodo_0SelByasoServicio_Id"
                ,p_asoServicio_Id
            ));
        }

        [DataObjectMethodAttribute(DataObjectMethodType.Select, true)]
        public IList<asoPeriodo> _0Sel()
        {
            return CBO.FillCollection<asoPeriodo>(DataProvider.Instance().ExecuteReader(
                "sp_asoPeriodo_0Sel"
                
            ));
        }

        [DataObjectMethodAttribute(DataObjectMethodType.Select, true)]
        public IList<asoPeriodo> _0SelByAll(Int32? No_Periodo=null,DateTime? Fecha_Periodo=null,String Estado=null,String Descripcion=null,Int32 PageIndex = 0, Int32 PageSize = 10, String SortField = "Id", String SortDirection = "ASC" )
        {
            return CBO.FillCollection<asoPeriodo>(DataProvider.Instance().ExecuteReader(
                "sp_asoPeriodo_0SelByAll"
                ,No_Periodo,Fecha_Periodo,Estado,Descripcion,PageIndex,PageSize,SortField,SortDirection
            ));
        }

        [DataObjectMethodAttribute(DataObjectMethodType.Select, true)]
        public asoPeriodo _1SelById(Int32 Id)
        {
            return CBO.FillObject<asoPeriodo>(DataProvider.Instance().ExecuteReader(
                "sp_asoPeriodo_1SelById"
                ,Id
            ));
        }

        [DataObjectMethodAttribute(DataObjectMethodType.Update, true)]
        public int _3Upd(asoPeriodo o)
        {
            try
            {
                return DataProvider.Instance().ExecuteScalar<int>(
                    "sp_asoPeriodo_3Upd"
                    ,o.Id,o.No_Periodo,o.Fecha_Periodo,o.Estado,o.Descripcion
                    );
            }
            catch(Exception exc)
            {                
                Exceptions.LogException(exc);
                string mensaje = string.Format("Error en: asoPeriodo, operacion: sp_asoPeriodo_3Upd, registro {0}.",o.Id);
                throw new Exception(mensaje, exc);
            }
        }

        [DataObjectMethodAttribute(DataObjectMethodType.Delete, true)]
        public int _4Del(asoPeriodo o)
        {
            try
            {
                return DataProvider.Instance().ExecuteScalar<int>(
                    "sp_asoPeriodo_4Del"
                    ,o.Id
                    );
            }
            catch(Exception exc)
            {                
                Exceptions.LogException(exc);
                string mensaje = string.Format("Error en: asoPeriodo, operacion: sp_asoPeriodo_4Del, registro {0}.",o.Id);
                throw new Exception(mensaje, exc);
            }
        }

        [DataObjectMethodAttribute(DataObjectMethodType.Insert, true)]
        public int _2Ins(asoPeriodo o)
        {
            try
            {
                return DataProvider.Instance().ExecuteScalar<int>(
                    "sp_asoPeriodo_2Ins"
                    ,o.No_Periodo,o.Fecha_Periodo,o.Estado,o.Descripcion
                    );
            }
            catch(Exception exc)
            {                
                Exceptions.LogException(exc);
                string mensaje = string.Format("Error en: asoPeriodo, operacion: sp_asoPeriodo_2Ins, registro {0}.",o.Id);
                throw new Exception(mensaje, exc);
            }
        }

        public int _5GenerarPeriodos(Int32 p_No_Periodos_a_Generar)
        {
            try
            {
                return DataProvider.Instance().ExecuteScalar<int>(
                    "sp_asoPeriodo_5GenerarPeriodos"
                    ,p_No_Periodos_a_Generar
                    );
            }
            catch(Exception exc)
            {                
                Exceptions.LogException(exc);
                string mensaje = string.Format("Error en: asoPeriodo, operacion: sp_asoPeriodo_5GenerarPeriodos, parámetros. p_No_Periodos_a_Generar:> {0}" ,p_No_Periodos_a_Generar);
                throw new Exception(mensaje, exc);
            }
        }

    }
}